sort file |uniq
查找非重复行
sort file |uniq -u
查找重复行
sort file |uniq -d
统计
sort file | uniq -c

apt-cache madison 包名
查询版本
apt-cache policy 包名
查询版本(详细)
apt install 包名=版本
安装指定版本


################
停止自动更新

sudo echo "软件包名 hold" | sudo dpkg --set-selections

比如我想给mysql-server锁定当前版本不更新，命令是：

sudo echo "mysql-server hold" | sudo dpkg --set-selections

查询当前系统内所有软件包的状态，命令为：

sudo dpkg --get-selections | more

查询当前系统被锁定不更新的软件包状态(hold)，命令为

sudo dpkg --get-selections | grep hold


################
# 每个desktop文件都以这个标签开始，说明这是一个Desktop Entry 文件.
[Desktop Entry]
# 标明Desktop Entry的版本(可选).
Version=1.0
# desktop的类型(必选),常见值有“Application”和“Link”.
Type=Application
# 程序名称(必须)                 
Name=MindMaster 
# 程序描述(可选).                 
GenericName=Mind Master
# 程序描述(可选).     
Comment=Mind mapping
# 程序的启动命令(必选),可以带参数运行    
Exec=/home/l/APP/mindmaster-6-amd64-cn/MindMaster-6-x86_64
# 设置快捷方式的图标(可选).            
Icon=/home/l/APP/mindmaster-6-amd64-cn/mindmaster.png
# 是否在终端中运行(可选),当Type为Application,此项有效. 
Terminal=false
# 注明在菜单栏中显示的类别(可选)
Categories=Application
################


https://github.com/chungyuhoi/script/blob/main/utqemu.sh

bash -c "$(curl https://cdn.jsdelivr.net/gh/chungyuhoi/script/termux-toolx.sh)"

bash -c "$(curl https://cdn.jsdelivr.net/gh/chungyuhoi/script/utqemu.sh)"

bash -c "$(curl https://cdn.jsdelivr.net/gh/chungyuhoi/script/utqemu.sh)"



apt install --no-install-recommends

grep -w "abc" 或者是grep "\<abc\>"

sed -i '/printf/s/$/#/' bcd
sed -i '/printf/s/^/#/' bcd

diff -y --suppress-common-lines

dpkg -i --ignore-depends=

dpkg -e 解安装信息
dpkg -X 解安装包
dpkg-deb -b 打包
DEBIAN/postinst
DEBIAN/control
Package: 中间不能有空格
Version: 8.5.0
Section: utils, net, mail, text, x11
Priority: optional
Architecture: arm64, i386, amd64, m68k, sparc, alpha, powerpc等
Depends:
Installed-Size:
Maintainer: none
Description: Electron package

dpkg --add-architecture amd64
dpkg --print-foreign-architectures
dpkg --remove-architecture architecture


###################
#git

ssh-keygen -t ed25519 -C "chungyuhoi@hotmail.com"

eval "$(ssh-agent -s)"

ssh-add ~/.ssh/id_ed25519

cat id_ed25519.pub
复制

github.com
SSH and GPG keys
粘贴

ssh -T git@github.com

#创建仓库
mkdir git
#进入仓库定位
cd git
git init
#//连接本地与远程仓库 git@******* 此处应改为自己的仓库
git remote add origin git@github.com:chungyuhoi/chungyuhoi.github.io
git config --global user.name "chungyuhoi"
git config --global user.email "chungyuhoi@hotmail.com"
sed -i 's/master/main/' .git/HEAD
#用于从远程获取代码并合并本地的版本
git pull origian main
git push origian main或git push --set-upstream origin main

#//将所有更改的内容 添加到缓冲区
git add multi-rootfs.sh
#//确认提交 且提交评论为RedHaohao  此处可以改为任何信息
git commit -am "multi-rootfs.sh"
#master//将本地的内容提交到github上去
git push

#//创建并切换到redhaohao分支上
git checkout -b  redhaohao
git clone --depth=1 -b main git@github.com:chungyuhoi/script src ;
cp -v multi-rootfs.sh src ;
cd src ;
git add . ;
git commit -am "update multi-rootfs.sh" ;
git push
